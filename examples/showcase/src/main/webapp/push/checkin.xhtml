<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://blazebit.com/faces"
	template="../templates/ui.xhtml">
    
    <ui:define name="head">
        <style type="text/css">
        </style>
        
        <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
        
        <script type="text/javascript">
            //<![CDATA[
                function handleMessage(data) {
                    var coords = new google.maps.LatLng(data.lat, data.lng);
                    
                    var marker = new google.maps.Marker({
						position: coords
                        ,title: data.title
					});
									            
					map.addOverlay(marker);
                     
                    map.infowindow = new google.maps.InfoWindow({
                        content: '<h3>' + data.title + " just checked in!</h3>"
                    });
            
                    map.getMap().setCenter(coords);
                    map.infowindow.open(map.getMap(), marker);
                }
                
                $(function() {
                    navigator.geolocation.getCurrentPosition(
                        function(position) {                            
                            $(BlazeFaces.escapeClientId('form:lat')).val(position.coords.latitude);
                            $(BlazeFaces.escapeClientId('form:lng')).val(position.coords.longitude);
                        },
                        function(error) {
                            alert(error.message);
                        },
                        {
                           enableHighAccuracy: true
                        });
                });
            //]]> 
        </script>
        

    </ui:define>

	<ui:define name="content">

        <h1 class="title ui-widget-header ui-corner-all">BlazePush - Check-In</h1>
        <div class="entry">
            <p>Check-in is a real-time location sharing sample.</p>

            <h:form id="form">

                <b:fieldset legend="Check-In">
                    <h:panelGrid columns="2">
                        <b:outputLabel for="title" value="Title: " />
                        <b:inputText id="title" value="#{mapBean.title}" />

                        <b:spacer />
                        <b:commandButton value="Check-In" actionListener="#{mapBean.checkin}" />
                    </h:panelGrid>
                </b:fieldset>

                <br />

                <b:gmap id="gmap" center="36.890257,30.707417" zoom="13" type="HYBRID" style="width:600px;height:400px"
                    model="#{mapBean.emptyModel}" widgetVar="map" />

                <h:inputHidden id="lat" value="#{mapBean.lat}" />
                <h:inputHidden id="lng" value="#{mapBean.lng}" />

            </h:form>

            <b:socket onMessage="handleMessage" channel="/check-in" />

            <h3>Source</h3>
            <b:tabView>
                <b:tab title="checkin.xhtml">
                    <pre name="code" class="xml">
&lt;h:form id="form"&gt;

    &lt;b:fieldset legend="Check-In"&gt;
        &lt;h:panelGrid columns="2"&gt;
            &lt;b:outputLabel for="name" value="Name" /&gt;
            &lt;b:inputText id="name" value="\#{mapBean.name}" /&gt;

            &lt;b:spacer /&gt;
            &lt;b:commandButton value="Check-In" actionListener="\#{mapBean.checkin}" /&gt;
        &lt;/h:panelGrid&gt;
    &lt;/b:fieldset&gt;

    &lt;br /&gt;

    &lt;b:gmap id="gmap" center="36.890257,30.707417" zoom="13" type="HYBRID" style="width:600px;height:400px"
        model="#{mapBean.emptyModel}" widgetVar="map" /&gt;

    &lt;h:inputHidden id="lat" value="#{mapBean.lat}" /&gt;
    &lt;h:inputHidden id="lng" value="#{mapBean.lng}" /&gt;

&lt;/h:form&gt;

&lt;b:socket onMessage="handleMessage" channel="/check-in" /&gt;

function handleMessage(data) {
    var coords = new google.maps.LatLng(data.lat, data.lng);

    var marker = new google.maps.Marker({
        position: coords
        ,title: data.title
    });

    map.addOverlay(marker);

    map.infowindow = new google.maps.InfoWindow({
        content: '&lt;h3&gt;' + data.title + " just checked in!&lt;/h3&gt;"
    });

    map.getMap().setCenter(coords);
    map.infowindow.open(map.getMap(), marker);
}

$(function() {
    navigator.geolocation.getCurrentPosition(
        function(position) {                            
            $(BlazeFaces.escapeClientId('form:lat')).val(position.coords.latitude);
            $(BlazeFaces.escapeClientId('form:lng')).val(position.coords.longitude);
        },
        function(error) {
            alert(error.message);
        },
        {
            enableHighAccuracy: true
        });
});
                    </pre>
                </b:tab>

                <b:tab title="MapBean.java">
                    <pre name="code" class="java">
package com.blazebit.blazefaces.examples.view;

import java.io.Serializable;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import com.blazebit.blazefaces.event.map.MarkerDragEvent;
import com.blazebit.blazefaces.event.map.OverlaySelectEvent;
import com.blazebit.blazefaces.event.map.PointSelectEvent;
import com.blazebit.blazefaces.event.map.StateChangeEvent;
import com.blazebit.blazefaces.examples.domain.CheckIn;
import com.blazebit.blazefaces.model.map.Circle;
import com.blazebit.blazefaces.model.map.DefaultMapModel;
import com.blazebit.blazefaces.model.map.LatLng;
import com.blazebit.blazefaces.model.map.LatLngBounds;
import com.blazebit.blazefaces.model.map.MapModel;
import com.blazebit.blazefaces.model.map.Marker;
import com.blazebit.blazefaces.model.map.Polygon;
import com.blazebit.blazefaces.model.map.Polyline;
import com.blazebit.blazefaces.model.map.Rectangle;
import com.blazebit.blazefaces.push.PushContext;
import com.blazebit.blazefaces.push.PushContextFactory;

public class MapBean implements Serializable {
	
	private String title;
	
	private double lat;
	
	private double lng;
    	
	public MapModel getEmptyModel() {
		return emptyModel;
	}


	public double getLat() {
		return lat;
	}

	public void setLat(double lat) {
		this.lat = lat;
	}

	public double getLng() {
		return lng;
	}

	public void setLng(double lng) {
		this.lng = lng;
	}

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }
    
    public void checkin() {
        PushContext pushContext = PushContextFactory.getDefault().getPushContext();                
        
        pushContext.push("/check-in", new CheckIn(title, lat, lng));
    }
}
                    </pre>
                </b:tab>
                
                <b:tab title="CheckIn.java">
                    <pre name="code" class="java">
package com.blazebit.blazefaces.examples.domain;

public class CheckIn {
    
    private String title;
    private double lat;
    private double lng;
    
    public CheckIn() {
        
    }

    public CheckIn(String title, double lat, double lng) {
        this.title = title;
        this.lat = lat;
        this.lng = lng;
    }
    
    public double getLat() {
        return lat;
    }

    public void setLat(double lat) {
        this.lat = lat;
    }

    public double getLng() {
        return lng;
    }

    public void setLng(double lng) {
        this.lng = lng;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }
}
                    </pre>
                </b:tab>
                
            </b:tabView>
		
		</div>
	</ui:define>
</ui:composition>
