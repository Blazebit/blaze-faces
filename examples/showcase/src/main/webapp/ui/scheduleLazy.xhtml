<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://blazebit.com/faces"
	template="../templates/ui.xhtml">
	
	<ui:define name="content">
		
		<h1 class="title ui-widget-header ui-corner-all">Schedule - Lazy</h1>
		<div class="entry">
		<p>Schedule supports lazy loading with a lazy ScheduleModel.</p>
		
			<h:form>

				<b:schedule value="#{scheduleController.lazyEventModel}" />
				
			</h:form>
			
			<h3>Source</h3>
            <b:tabView>
                <b:tab title="scheduleLazy.xhtml">
<pre name="code" class="xml">
&lt;h:form&gt;

	&lt;b:schedule value="\#{scheduleController.lazyEventModel}" /&gt;

&lt;/h:form&gt;
</pre>
                </b:tab>

                <b:tab title="ScheduleController.java">
<pre name="code" class="java">
public class ScheduleController {

	private ScheduleModel&lt;ScheduleEvent&gt; lazyEventModel;

	public ScheduleController() {
		lazyEventModel = new ScheduleModel&lt;ScheduleEvent&gt;() {

			@Override
			public boolean isLazy() {
				return true;
			}

			@Override
			public void fetchEvents(Date start, Date end) {
				setEvents(new ArrayList&lt;ScheduleEvent&gt;());	//clean other periods

				Date random = getRandomDate(start);
				addEvent(new ScheduleEventImpl("Lazy Event 1", random, random));

				random = getRandomDate(start);
				addEvent(new ScheduleEventImpl("Lazy Event 2", random, random));
			}
		};
	}

	public Date getRandomDate(Date base) {
		Calendar date = Calendar.getInstance();
		date.setTime(base);
		date.add(Calendar.DATE, ((int) (Math.random()*30)) + 1);	//set random day of month

		return date.getTime();
	}

	public ScheduleModel&lt;ScheduleEvent&gt; getLazyEventModel() {
		return lazyEventModel;
	}
}
</pre>
                </b:tab>
            </b:tabView>

		</div>
		
	</ui:define>
</ui:composition>