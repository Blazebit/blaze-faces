<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://blazebit.com/faces"
	template="../templates/ui.xhtml">

	<ui:define name="content">
		<h1 class="title ui-widget-header ui-corner-all">Tree - Icons</h1>

		<div class="entry">
			<p>Each node in a tree can have a specific icon.</p>

			<h:form id="form">

				<b:tree id="docTree" value="#{documentsController.root}" var="doc">
					<b:treeNode expandedIcon="ui-icon-folder-open" collapsedIcon="ui-icon-folder-collapsed">
						<h:outputText value="#{doc.name}"/>
					</b:treeNode>

					<b:treeNode type="document" icon="ui-icon-document">
						<h:outputText value="#{doc.name}" />
					</b:treeNode>

					<b:treeNode type="picture" icon="ui-icon-image">
						<h:outputText value="#{doc.name}" />
					</b:treeNode>

					<b:treeNode type="mp3" icon="ui-icon-video">
						<h:outputText value="#{doc.name}" />
					</b:treeNode>
				</b:tree>

			</h:form>

			<h3>Source</h3>
			<b:tabView>
				<b:tab title="treeIcons.xhtml">
			<pre name="code" class="xml">
&lt;h:form id="form"&gt;

    &lt;b:tree id="docTree" value="\#{documentsController.root}" var="doc"&gt;
        &lt;b:treeNode expandedIcon="ui-icon-folder-open"
                    collapsedIcon="ui-icon-folder-collapsed"&gt;
            &lt;h:outputText value="\#{doc.name}"/&gt;
        &lt;/b:treeNode&gt;

        &lt;b:treeNode type="document" icon="ui-icon-document"&gt;
            &lt;h:outputText value="\#{doc.name}" /&gt;
        &lt;/b:treeNode&gt;

        &lt;b:treeNode type="picture" icon="ui-icon-image"&gt;
            &lt;h:outputText value="\#{doc.name}" /&gt;
        &lt;/b:treeNode&gt;

        &lt;b:treeNode type="mp3" icon="ui-icon-video"&gt;
            &lt;h:outputText value="\#{doc.name}" /&gt;
        &lt;/b:treeNode&gt;
    &lt;/b:tree&gt;

&lt;/h:form&gt;
			</pre>
				</b:tab>

				<b:tab title="DocumentsController.java">
                    <pre name="code" class="java">
package com.blazebit.blazefaces.examples.view;

import java.io.Serializable;

import com.blazebit.blazefaces.model.DefaultTreeNode;
import com.blazebit.blazefaces.model.TreeNode;

import com.blazebit.blazefaces.examples.domain.Document;

public class DocumentsController implements Serializable {

	private TreeNode root;

    public DocumentsController() {
		root = new DefaultTreeNode("root", null);

		TreeNode documents = new DefaultTreeNode(new Document("Documents", "-", "Folder"), root);
		TreeNode pictures = new DefaultTreeNode(new Document("Pictures", "-", "Folder"), root);
		TreeNode movies = new DefaultTreeNode(new Document("Movies", "-", "Folder"), root);

		TreeNode work = new DefaultTreeNode(new Document("Work", "-", "Folder"), documents);
		TreeNode blazefaces = new DefaultTreeNode(new Document("BlazeFaces", "-", "Folder"), documents);

		//Documents
		TreeNode expenses = new DefaultTreeNode("document", new Document("Expenses.doc", "30 KB", "Word Document"), work);
		TreeNode resume = new DefaultTreeNode("document", new Document("Resume.doc", "10 KB", "Word Document"), work);
		TreeNode refdoc = new DefaultTreeNode("document", new Document("RefDoc.pages", "40 KB", "Pages Document"), blazefaces);

		//Pictures
		TreeNode barca = new DefaultTreeNode("picture", new Document("barcelona.jpg", "30 KB", "JPEG Image"), pictures);
		TreeNode blazeLogo = new DefaultTreeNode("picture", new Document("logo.jpg", "45 KB", "JPEG Image"), pictures);
		TreeNode optimus = new DefaultTreeNode("picture", new Document("blaze_logo.png", "96 KB", "PNG Image"), pictures);

		//Movies
		TreeNode pacino = new DefaultTreeNode(new Document("Al Pacino", "-", "Folder"), movies);
		TreeNode deniro = new DefaultTreeNode(new Document("Robert De Niro", "-", "Folder"), movies);

		TreeNode scarface = new DefaultTreeNode("mp3", new Document("Scarface", "15 GB", "Movie File"), pacino);
		TreeNode carlitosWay = new DefaultTreeNode("mp3", new Document("Carlitos' Way", "24 GB", "Movie File"), pacino);

		TreeNode goodfellas = new DefaultTreeNode("mp3", new Document("Goodfellas", "23 GB", "Movie File"), deniro);
		TreeNode untouchables = new DefaultTreeNode("mp3", new Document("Untouchables", "17 GB", "Movie File"), deniro);
	}

	public TreeNode getRoot() {
		return root;
	}
}
                    </pre>
				</b:tab>
			</b:tabView>




		</div>

	</ui:define>
</ui:composition>