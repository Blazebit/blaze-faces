<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://blazebit.com/faces"
	template="../templates/ui.xhtml">
	
    <ui:define name="head"> 
        <style tyle="text/css">
            .animated .ui-progressbar-value { 
                background-image: url(../images/pbar-ani.gif); 
            }
        </style>
        
        <script type="text/javascript">
            //<![CDATA[
function start() {
    startButton1.disable();
    window['progress'] = setInterval(function() {
        var oldValue = pbClient.getValue(),
        newValue = oldValue + 10;
                
        pbClient.setValue(pbClient.getValue() + 10);
    
        if(newValue == 100) {
            clearInterval(window['progress']);
        }
        
        
    }, 1000);
}

function cancel() {
    clearInterval(window['progress']);
    pbClient.setValue(0);
    startButton1.enable();
}
            //]]>
        </script>
    </ui:define>

	<ui:define name="content">

		<h1 class="title ui-widget-header ui-corner-all">ProgressBar</h1>
		<div class="entry">
			<p>ProgressBar is a process status indicator that can either work on client side or integrate with server side
			via ajax.</p>
		
			<h:form id="form">
                
                <b:growl id="growl" />
		
				<h3>Client Side ProgressBar</h3>
				<b:commandButton value="Start" id="start" type="button" onclick="start()" widgetVar="startButton1"/>
				<b:commandButton value="Cancel" id="cancel" type="button" onclick="cancel()" />
				<br /><br />
				<b:progressBar id="progressBarClient" widgetVar="pbClient" style="width:300px"/>
	 
				<h3>Advanced Ajax ProgressBar</h3>
				<b:commandButton value="Start" type="button" onclick="pbAjax.start();startButton2.disable();" widgetVar="startButton2" />
				<b:commandButton value="Cancel" actionListener="#{progressBean.cancel}" oncomplete="pbAjax.cancel();startButton2.enable();" />
				<br /><br />
				<b:progressBar widgetVar="pbAjax" ajax="true" value="#{progressBean.progress}" labelTemplate="{value}%" styleClass="animated">
                    <b:ajax event="complete" listener="#{progressBean.onComplete}" update="growl" oncomplete="startButton2.enable()"/>
                </b:progressBar>
                
                <h3>Static Display</h3>
				<b:progressBar value="50" labelTemplate="{value}%" displayOnly="true"/>
					
			</h:form>
			
			<h3>Source</h3>
			<b:tabView>
				<b:tab title="progressBar.xhtml">
					<pre name="code" class="xml">
&lt;h:form&gt;
                
    &lt;b:growl id="growl" /&gt;

    &lt;h3&gt;Client Side ProgressBar&lt;/h3&gt;
    &lt;b:commandButton value="Start" id="start" type="button" onclick="start()" widgetVar="startButton1"/&gt;
    &lt;b:commandButton value="Cancel" id="cancel" type="button" onclick="cancel()" /&gt;

    &lt;b:progressBar id="progressBarClient" widgetVar="pbClient" style="width:300px"/&gt;

    &lt;h3&gt;Ajax ProgressBar with Growl Integration&lt;/h3&gt;
    &lt;b:commandButton value="Start" type="button" onclick="pbAjax.start();startButton2.disable();" widgetVar="startButton2" /&gt;
    &lt;b:commandButton value="Cancel" actionListener="\#{progressBean.cancel}" oncomplete="pbAjax.cancel();startButton2.enable();" /&gt;

    &lt;b:progressBar widgetVar="pbAjax" ajax="true" value="\#{progressBean.progress}" labelTemplate="{value}%" styleClass="animated"&gt;
        &lt;b:ajax event="complete" listener="\#{progressBean.onComplete}" update="growl" oncomplete="startButton2.enable()"/&gt;
    &lt;/b:progressBar&gt;

    &lt;h3&gt;Static Display&lt;/h3&gt;
    &lt;b:progressBar value="50" labelTemplate="{value}%" displayOnly="true"/&gt;

&lt;/h:form&gt;
                    </pre>
				
				<pre name="code" class="javascript">
&lt;script type="text/javascript"&gt;
	function start() {
        startButton1.disable();
        window['progress'] = setInterval(function() {
            var oldValue = pbClient.getValue(),
            newValue = oldValue + 10;

            pbClient.setValue(pbClient.getValue() + 10);

            if(newValue == 100) {
                clearInterval(window['progress']);
            }


        }, 1000);
    }

    function cancel() {
        clearInterval(window['progress']);
        pbClient.setValue(0);
        startButton1.enable();
    }
&lt;/script&gt;
				</pre>
				</b:tab>
				
				<b:tab title="ProgressBean.java">
					<pre name="code" class="java">
package com.blazebit.blazefaces.examples.view;

import java.io.Serializable;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

public class ProgressBean implements Serializable {

	private Integer progress;

	public Integer getProgress() {
		if(progress == null)
			progress = 0;
		else {
			progress = progress + (int)(Math.random() * 35);
			
			if(progress &gt; 100)
				progress = 100;
		}
		
		return progress;
	}

	public void setProgress(Integer progress) {
		this.progress = progress;
	}
	
	public void onComplete() {
		FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Progress Completed", "Progress Completed"));
	}
	
	public void cancel() {
		progress = null;
	}
}
					</pre>
				</b:tab>
			</b:tabView>
			
						
		</div>
	
				
	</ui:define>
</ui:composition>