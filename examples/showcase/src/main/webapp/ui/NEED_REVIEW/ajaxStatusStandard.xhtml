<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:b="http://blazebit.com/faces"
                template="../templates/ui.xhtml">

    <ui:define name="content">

        <h1 class="title ui-widget-header ui-corner-all">AJAX - Status Standard</h1>
        <div class="entry">
            <p>Ajax Status also support standard JSF ajax calls.</p>

            <h:form>

                <b:panel id="panel" header="Ajax Status">

                    <b:messages id="msgs" />

                    <h:panelGrid columns="3" cellpadding="5">
                        <h:outputLabel for="firstname" value="Firstname: *" />
                        <b:inputText id="firstname" value="#{personBean.firstname}" required="true" label="Firstname">
                            <f:validateLength minimum="2" />
                        </b:inputText>
                        <b:message for="firstname" id="lblErrFirstName" />

                        <h:outputLabel for="surname" value="Surname: *" />
                        <b:inputText id="surname" value="#{personBean.surname}" required="true" label="Surname"/>
                        <b:message for="surname" id="lblErrSurname" />

                    </h:panelGrid>

                    <h:commandButton value="Submit" actionListener="#{personBean.savePerson}" id="btnGlobal">
                        <f:ajax execute="panel" render="panel" />
                    </h:commandButton>
                    
                </b:panel>

            </h:form>

            <h3>Source</h3>
            <b:tabView>
                <b:tab title="ajaxStatusStandard.xhtml">
                    <pre name="code" class="xml">
&lt;h:form&gt;

    &lt;b:panel id="panel" header="Ajax Status"&gt;

        &lt;b:messages id="msgs" /&gt;

        &lt;h:panelGrid columns="3" cellpadding="5"&gt;
            &lt;h:outputLabel for="firstname" value="Firstname: *" /&gt;
            &lt;b:inputText id="firstname" value="\#{personBean.firstname}" required="true" label="Firstname"&gt;
                &lt;f:validateLength minimum="2" /&gt;
            &lt;/b:inputText&gt;
            &lt;b:message for="firstname" id="lblErrFirstName" /&gt;

            &lt;h:outputLabel for="surname" value="Surname: *" /&gt;
            &lt;b:inputText id="surname" value="\#{personBean.surname}" required="true" label="Surname"/&gt;
            &lt;b:message for="surname" id="lblErrSurname" /&gt;

        &lt;/h:panelGrid&gt;

        &lt;h:commandButton value="Submit" actionListener="\#{personBean.savePerson}" id="btnGlobal"&gt;
            &lt;f:ajax execute="panel" render="panel" /&gt;
        &lt;/h:commandButton&gt;

    &lt;/b:panel&gt;

&lt;/h:form&gt;

&lt;b:ajaxStatus style="width:64px;height:64px;position:fixed;right:5px;bottom:5px"&gt;
    &lt;f:facet name="start"&gt;
        &lt;b:graphicImage value="/images/loading.gif" /&gt;
    &lt;/f:facet&gt;

    &lt;f:facet name="complete"&gt;
        &lt;h:outputText value="" /&gt;
    &lt;/f:facet&gt;
&lt;/b:ajaxStatus&gt;
                    </pre>
                </b:tab>

                <b:tab title="PersonBean.java">
                    <pre name="code" class="java">
package com.blazebit.blazefaces.examples.view;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

public class PersonBean {

	private String firstname;
	
	private String surname;

	public String getFirstname() {
		return firstname;
	}
	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public String getSurname() {
		return surname;
	}
	public void setSurname(String surname) {
		this.surname = surname;
	}
	
	public void savePerson(ActionEvent actionEvent) {
		FacesContext.getCurrentInstance().addMessage(null, new FacesMessage("Welcome " + firstname + " " + surname + "!"));
	}
}
                    </pre>
                </b:tab>
            </b:tabView>


        </div>

    </ui:define>

</ui:composition>