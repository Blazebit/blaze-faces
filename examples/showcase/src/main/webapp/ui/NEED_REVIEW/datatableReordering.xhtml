<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://blazebit.com/faces"
	template="../templates/ui.xhtml">
    
    <ui:define name="head">
        <style type="text/css">
        </style>
        
        <script type="text/javascript">
            
        </script>
    </ui:define>

	<ui:define name="content">
	<h1 class="title ui-widget-header ui-corner-all">DataTable - Columns Reordering</h1>
		<div class="entry">
			<p>DataTable columns can be reordered using drag and drop. Column order is preserved in postbacks and
            "columnReorder" event is available as an ajax event for optional use.</p>

            <h:form>
                <b:dataTable var="car" value="#{tableBean.carsSmall}" draggableColumns="true">
                    <b:column id="modelHeader">
                        <f:facet name="header">
								Model
                        </f:facet>
                        <h:outputText value="#{car.model}" />
                    </b:column>

                    <b:column>
                        <f:facet name="header">
								Year
                        </f:facet>
                        <h:outputText value="#{car.year}" />
                    </b:column>

                    <b:column>
                        <f:facet name="header">
								Manufacturer
                        </f:facet>
                        <h:outputText value="#{car.manufacturer}" />
                    </b:column>

                    <b:column>
                        <f:facet name="header">
								Color
                        </f:facet>
                        <h:outputText value="#{car.color}" />
                    </b:column>
                </b:dataTable>
            </h:form>

		<h3>Source</h3>
		<b:tabView>
			<b:tab title="datatableReordering.xhtml">
<pre name="code" class="xml">
&lt;h:form&gt;
    &lt;b:dataTable var="car" value="\#{tableBean.carsSmall}" draggableColumns="true"&gt;
        &lt;b:column id="modelHeader"&gt;
            &lt;f:facet name="header"&gt;
                    Model
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.model}" /&gt;
        &lt;/b:column&gt;

        &lt;b:column&gt;
            &lt;f:facet name="header"&gt;
                    Year
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.year}" /&gt;
        &lt;/b:column&gt;

        &lt;b:column&gt;
            &lt;f:facet name="header"&gt;
                    Manufacturer
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.manufacturer}" /&gt;
        &lt;/b:column&gt;

        &lt;b:column&gt;
            &lt;f:facet name="header"&gt;
                    Color
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.color}" /&gt;
        &lt;/b:column&gt;
    &lt;/b:dataTable&gt;
&lt;/h:form&gt;
				</pre>
			</b:tab>
			
			<b:tab title="TableBean.java">
			<pre name="code" class="java">
package com.blazebit.blazefaces.examples.view;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.blazebit.blazefaces.examples.domain.Car;

public class TableBean implements Serializable {
	
	static {
		colors = new String[10];
		colors[0] = "Black";
		colors[1] = "White";
		colors[2] = "Green";
		colors[3] = "Red";
		colors[4] = "Blue";
		colors[5] = "Orange";
		colors[6] = "Silver";
		colors[7] = "Yellow";
		colors[8] = "Brown";
		colors[9] = "Maroon";
		
		manufacturers = new String[10];
		manufacturers[0] = "Mercedes";
		manufacturers[1] = "BMW";
		manufacturers[2] = "Volvo";
		manufacturers[3] = "Audi";
		manufacturers[4] = "Renault";
		manufacturers[5] = "Opel";
		manufacturers[6] = "Volkswagen";
		manufacturers[7] = "Chrysler";
		manufacturers[8] = "Ferrari";
		manufacturers[9] = "Ford";
	}

    private final static String[] colors;

	private final static String[] manufacturers;
	
	private List&lt;Car&gt; carsSmall;
	
	public TableBean() {
		carsSmall = new ArrayList&lt;Car&gt;();
		
		populateRandomCars(carsSmall, 9);
	}
	
	private void populateRandomCars(List&lt;Car&gt; list, int size) {
		for(int i = 0 ; i &lt; size ; i++)
			list.add(new Car(getRandomModel(), getRandomYear(), getRandomManufacturer(), getRandomColor()));
	}
	
	public List&lt;Car&gt; getCarsSmall() {
		return carsSmall;
	}

	private int getRandomYear() {
		return (int) (Math.random() * 50 + 1960);
	}
	
	private String getRandomColor() {
		return colors[(int) (Math.random() * 10)];
	}
	
	private String getRandomManufacturer() {
		return manufacturers[(int) (Math.random() * 10)];
	}
	
	private String getRandomModel() {
		return UUID.randomUUID().toString().substring(0, 8);
	}
}
				</pre>
			</b:tab>
		</b:tabView>
	       </div>
				
	</ui:define>
</ui:composition>